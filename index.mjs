// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import{isPrimitive as o}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-int32array@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/array-int32@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-int32-max@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.0.3-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";function g(e,t,n){var s,r;for(r=0;r<8;r++)if(s=e(),c(s))throw new Error("unexpected error. PRNG returned NaN.");for(r=n-1;r>=0;r--)t[r]=e();return t}var b=h-1;function E(){return 0|m(1+b*Math.random())}var j=h-1|0,v=h-1|0;function y(e,t){var n;return n=t?"option":"argument",e.length<40?new RangeError(u("invalid %s. State array has insufficient length.",n)):1!==e[0]?new RangeError(u("invalid %s. State array has an incompatible schema version. Expected: `%s`. Actual: `%s`.",n,1,e[0])):3!==e[1]?new RangeError(u("invalid %s. State array has an incompatible number of sections. Expected: `%s`. Actual: `%s`.",n,3,e[1])):32!==e[2]?new RangeError(u("invalid %s. State array has an incompatible table length. Expected: `%s`. Actual: `%s`.",n,32,e[2])):2!==e[35]?new RangeError(u("invalid %s. State array has an incompatible state length. Expected: `%u`. Actual: `%u`.",n,2,e[35])):e[38]!==e.length-39?new RangeError(u("invalid %s. State array length is incompatible with seed section length. Expected: `%u`. Actual: `%u`.",n,e.length-39,e[38])):null}function w(c){var b,w,x,N,T,M;if(x={},arguments.length){if(!r(c))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",c));if(s(c,"copy")&&(x.copy=c.copy,!i(c.copy)))throw new TypeError(u("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",c.copy));if(s(c,"state")){if(w=c.state,x.state=!0,!d(w))throw new TypeError(u("invalid option. `%s` option must be an Int32Array. Option: `%s`.","state",w));if(M=y(w,!0))throw M;!1===x.copy?b=w:(b=new f(w.length),l(w.length,w,1,b,1)),w=new f(b.buffer,b.byteOffset+3*b.BYTES_PER_ELEMENT,32),N=new f(b.buffer,b.byteOffset+39*b.BYTES_PER_ELEMENT,w[38])}if(void 0===N)if(s(c,"seed"))if(N=c.seed,x.seed=!0,o(N)){if(N>v)throw new RangeError(u("invalid option. `%s` option must be a positive integer less than the maximum signed 32-bit integer. Option: `%u`.","seed",N));N|=0}else{if(!(a(N)&&N.length>0))throw new TypeError(u("invalid option. `%s` option must be either a positive integer less than the maximum signed 32-bit integer or an array-like object containing integer values less than the maximum signed 32-bit integer. Option: `%s`.","seed",N));T=N.length,(b=new f(39+T))[0]=1,b[1]=3,b[2]=32,b[35]=2,b[37]=N[0],b[38]=T,l.ndarray(T,N,1,0,b,1,39),w=new f(b.buffer,b.byteOffset+3*b.BYTES_PER_ELEMENT,32),N=new f(b.buffer,b.byteOffset+39*b.BYTES_PER_ELEMENT,T),w=g(B,w,32),b[36]=w[0]}else N=0|E()}else N=0|E();return void 0===w&&((b=new f(40))[0]=1,b[1]=3,b[2]=32,b[35]=2,b[37]=N,b[38]=1,b[39]=N,w=new f(b.buffer,b.byteOffset+3*b.BYTES_PER_ELEMENT,32),N=new f(b.buffer,b.byteOffset+39*b.BYTES_PER_ELEMENT,1),w=g(B,w,32),b[36]=w[0]),e(Y,"NAME","minstd-shuffle"),t(Y,"seed",R),t(Y,"seedLength",S),n(Y,"state",O,A),t(Y,"stateLength",_),t(Y,"byteLength",L),e(Y,"toJSON",P),e(Y,"MIN",1),e(Y,"MAX",h-1),e(Y,"normalized",I),e(I,"NAME",Y.NAME),t(I,"seed",R),t(I,"seedLength",S),n(I,"state",O,A),t(I,"stateLength",_),t(I,"byteLength",L),e(I,"toJSON",P),e(I,"MIN",(Y.MIN-1)/j),e(I,"MAX",(Y.MAX-1)/j),Y;function R(){var e=b[38];return l(e,N,1,new f(e),1)}function S(){return b[38]}function _(){return b.length}function L(){return b.byteLength}function O(){var e=b.length;return l(e,b,1,new f(e),1)}function A(e){var t;if(!d(e))throw new TypeError(u("invalid argument. Must provide an Int32Array. Value: `%s`.",e));if(t=y(e,!1))throw t;!1===x.copy?x.state&&e.length===b.length?l(e.length,e,1,b,1):(b=e,x.state=!0):(e.length!==b.length&&(b=new f(e.length)),l(e.length,e,1,b,1)),w=new f(b.buffer,b.byteOffset+3*b.BYTES_PER_ELEMENT,32),N=new f(b.buffer,b.byteOffset+39*b.BYTES_PER_ELEMENT,b[38])}function P(){var e={type:"PRNG"};return e.name=Y.NAME,e.state=p(b),e.params=[],e}function B(){var e=0|b[37];return e=16807*e%h|0,b[37]=e,0|e}function Y(){var e,t;return e=b[36],t=m(e/h*32),e=w[t],b[36]=e,w[t]=B(),e}function I(){return(Y()-1)/j}}var x=w({seed:E()});e(x,"factory",w);export{x as default,w as factory};
//# sourceMappingURL=index.mjs.map
